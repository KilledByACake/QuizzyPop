@model QuizzyPop.ViewModels.QuizMetaDataViewModel
@{
    ViewData["Title"] = "Create Quiz";
}

<section class="qp-page create-quiz-page">
    <!-- Title Section -->
    <div class="page-header">
        <img src="~/images/quizzy-blueberry.png" alt="Quizzy Pop mascot" class="mascot" />
        <h1>Create Your Quiz</h1>
        <p class="subtitle">Share knowledge through fun questions!</p>
    </div>

    <!-- Quiz Form -->
    <div class="quiz-card">
        <form asp-controller="Home" asp-action="CreateQuiz" method="post" enctype="multipart/form-data">
            <!-- Quiz Details -->
            <div class="form-group">
                <label asp-for="Title">Quiz Title</label>
                <input asp-for="Title" class="form-input" placeholder="Enter quiz title..." />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description">Description</label>
                <textarea asp-for="Description" class="form-input" rows="3" placeholder="Describe your quiz..."></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- New Fields -->
            <div class="form-group">
                <label asp-for="CoverImage">Cover Image</label>
                <div class="file-upload" id="fileUploadArea">
                    <input type="file" asp-for="CoverImage" class="file-input" id="coverImageInput" accept="image/*" />
                    <div class="file-placeholder">
                        <i class="fas fa-cloud-upload-alt"></i>
                        <span>Choose an image or drag it here</span>
                    </div>
                </div>
                <span class="form-hint">Maximum size: 2MB. Recommended: 1200x630px</span>
            </div>

            <div class="form-row">
                <div class="form-group half">
                    <label asp-for="Category">Category</label>
                    <select asp-for="CategoryId" class="form-input">
                    @foreach (var cat in (ViewBag.Categories as List<QuizzyPop.Models.Category>) ?? new List<QuizzyPop.Models.Category>())
                    {
                     <option value="@cat.Id">@cat.Name</option>
                    }
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>
                </div>

                <div class="form-group half">
                    <label asp-for="Difficulty">Difficulty</label>
                    <select asp-for="Difficulty" class="form-input">
                        <option value="Easy">Easy (10 points per question)</option>
                        <option value="Medium">Medium (20 points per question)</option>
                        <option value="Hard">Hard (30 points per question)</option>
                    </select>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group half">
                    <label asp-for="TimeLimit">Time Limit (Optional)</label>
                    <div class="time-input">
                        <input asp-for="TimeLimit" type="number" class="form-input" min="1" max="180" />
                        <span class="time-suffix">minutes</span>
                    </div>
                    <span class="form-hint">Leave empty for no time limit</span>
                </div>

                <div class="form-group half">
                    <label>Publicly Visible</label>
                    <div class="toggle-container">
                        <label class="toggle">
                            <input asp-for="IsPublic" type="checkbox" />
                            <span class="slider"></span>
                        </label>
                    </div>
                    <span class="form-hint">Allow other users to find and take your quiz</span>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="button-row">
                <button type="submit" class="btn-next">Create Quiz</button>
                <a asp-action="Index" class="btn-prev">Cancel</a>
            </div>
        </form>
    </div>
</section>

<style>
.create-quiz-page {
    padding: var(--qp-space-xl) var(--qp-space-lg);
}

/* Header Styling */
.page-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-bottom: var(--qp-space-xl);
}

.page-header .mascot {
    width: 100px;
    height: auto;
    margin-bottom: var(--qp-space-md);
}

.page-header h1 {
    color: var(--qp-blue);
    font-size: 2.2rem;
    margin: var(--qp-space-sm) 0;
    font-family: var(--qp-font-special);
}

.subtitle {
    color: var(--qp-primary);
    font-size: 1.1rem;
    font-weight: 600;
}

/* Card Styling */
.quiz-card {
    background: var(--qp-white);
    border-radius: var(--qp-radius-lg);
    padding: var(--qp-space-xl);
    box-shadow: var(--qp-shadow-md);
    max-width: 800px;
    margin: 0 auto;
}

/* Form Styling */
.form-group {
    margin-bottom: var(--qp-space-lg);
}

.form-group label {
    display: block;
    margin-bottom: var(--qp-space-xs);
    font-weight: 600;
    color: var(--qp-deep);
    font-family: var(--qp-font-main);
}

.form-input {
    width: 100%;
    padding: var(--qp-space-sm);
    border: 2px solid var(--qp-gray-200);
    border-radius: var(--qp-radius-md);
    font-family: var(--qp-font-main);
    font-size: 1rem;
    transition: border-color 0.2s;
}

.form-input:focus {
    outline: none;
    border-color: var(--qp-primary);
}

/* Form Row Layout */
.form-row {
    display: flex;
    gap: var(--qp-space-lg);
    margin-bottom: var(--qp-space-lg);
}

.form-group.half {
    flex: 1;
}

/* File Upload Styling */
.file-upload {
    position: relative;
    border: 2px dashed var(--qp-gray-200);
    border-radius: var(--qp-radius-md);
    padding: var(--qp-space-lg);
    text-align: center;
    cursor: pointer;
    transition: border-color 0.2s, background-color 0.2s;
}

.file-upload:hover {
    border-color: var(--qp-primary);
    background-color: var(--qp-gray-100);
}

.file-input {
    position: absolute;
    opacity: 0;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    cursor: pointer;
}

.file-placeholder {
    color: var(--qp-gray-500);
    pointer-events: none; /* Allow clicks to pass through to the file input */
}

.file-placeholder i {
    display: block;
    font-size: 2rem;
    margin-bottom: var(--qp-space-sm);
    color: var(--qp-primary);
}

/* Time Input Styling */
.time-input {
    position: relative;
}

.time-suffix {
    position: absolute;
    right: var(--qp-space-md);
    top: 50%;
    transform: translateY(-50%);
    color: var(--qp-gray-500);
}

/* Toggle Switch Styling */
.toggle-container {
    display: flex;
    justify-content: center;
    margin: var(--qp-space-sm) 0;
}

.toggle {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

.toggle input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--qp-gray-300);
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked + .slider {
    background-color: var(--qp-primary);
}

input:checked + .slider:before {
    transform: translateX(26px);
}

/* Form Hints */
.form-hint {
    display: block;
    color: var(--qp-gray-500);
    font-size: 0.875rem;
    margin-top: var(--qp-space-xs);
}

/* Button Styling */
.button-row {
    display: flex;
    justify-content: space-between;
    gap: var(--qp-space-md);
    margin-top: var(--qp-space-xl);
}

.btn-next, 
.btn-prev {
    font-family: var(--qp-font-main);
    font-weight: 700;
    font-size: 1rem;
    border: none;
    border-radius: var(--qp-radius-full);
    padding: var(--qp-space-md) var(--qp-space-xl);
    cursor: pointer;
    transition: transform 0.2s;
    text-decoration: none;
    display: inline-block;
    text-align: center;
}

.btn-next {
    background: var(--qp-primary);
    color: var(--qp-white);
    box-shadow: 0 4px 0 var(--qp-primary-dark);
}

.btn-prev {
    background: var(--qp-gray-400);
    color: var(--qp-white);
}

.btn-next:hover,
.btn-prev:hover {
    transform: translateY(-2px);
}

/* Responsive Design */
@@media (max-width: 768px) {
    .create-quiz-page {
        padding: var(--qp-space-lg) var(--qp-space-md);
    }

    .quiz-card {
        padding: var(--qp-space-lg);
    }

    .form-row {
        flex-direction: column;
        gap: var(--qp-space-md);
    }

    .button-row {
        flex-direction: column-reverse;
    }

    .btn-next,
    .btn-prev {
        width: 100%;
    }
}
</style>

<script>
    // Make the entire file upload area clickable
    document.addEventListener('DOMContentLoaded', function() {
        const fileUploadArea = document.getElementById('fileUploadArea');
        const fileInput = document.getElementById('coverImageInput');
        
        // Click handler for the upload area
        fileUploadArea.addEventListener('click', function(e) {
            // Only trigger if not clicking directly on the input
            if (e.target !== fileInput) {
                fileInput.click();
            }
        });
        
        // Show selected file name
        fileInput.addEventListener('change', function(e) {
            const fileName = e.target.files[0]?.name;
            if (fileName) {
                const placeholder = fileUploadArea.querySelector('.file-placeholder span');
                placeholder.textContent = `Selected: ${fileName}`;
                fileUploadArea.style.borderColor = 'var(--qp-primary)';
            }
        });
        
        // Drag and drop support
        fileUploadArea.addEventListener('dragover', function(e) {
            e.preventDefault();
            fileUploadArea.style.borderColor = 'var(--qp-primary)';
            fileUploadArea.style.backgroundColor = 'rgba(147, 51, 234, 0.1)';
        });
        
        fileUploadArea.addEventListener('dragleave', function(e) {
            e.preventDefault();
            fileUploadArea.style.borderColor = 'var(--qp-gray-200)';
            fileUploadArea.style.backgroundColor = 'transparent';
        });
        
        fileUploadArea.addEventListener('drop', function(e) {
            e.preventDefault();
            fileUploadArea.style.borderColor = 'var(--qp-gray-200)';
            fileUploadArea.style.backgroundColor = 'transparent';
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                fileInput.files = files;
                const placeholder = fileUploadArea.querySelector('.file-placeholder span');
                placeholder.textContent = `Selected: ${files[0].name}`;
                fileUploadArea.style.borderColor = 'var(--qp-primary)';
            }
        });
    });
</script>