@{
    ViewData["Title"] = "Sign Up";
}

<section class="signup-page">
    <div class="signup-container">
        <img src="~/images/quizzy-blueberry.png" alt="Quizzy Pop mascot" class="signup-mascot" />
        <h1>Create Your Account</h1>
        <p class="subtitle">Join the fun! üí´</p>

        <form class="signup-form" method="post" id="signupForm" novalidate>
            <!-- Email -->
            <div class="form-group">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" required placeholder="you@example.com" />
                <span class="error-message">Please enter a valid email address.</span>
            </div>

            <!-- Password -->
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required minlength="6"
                    placeholder="Enter a strong password" />
                <span class="error-message">Password must be at least 6 characters long.</span>
            </div>

            <!-- Confirm password -->
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" required
                    placeholder="Repeat your password" />
                <span class="error-message">Passwords must match.</span>
            </div>

            <!-- Role Dropdown -->
            <div class="form-group dropdown">
                <label for="role">Select Your Role</label>
                <div class="dropdown-wrapper">
                    <select id="role" name="role" required>
                        <option value="">Choose one...</option>
                        <option value="student">üéì Student</option>
                        <option value="teacher">üçé Teacher</option>
                        <option value="parent">üë®‚Äçüë©‚Äçüëß Parent</option>
                    </select>
                </div>
                <span class="error-message">Please select a role.</span>
                <p class="role-hint">Teachers and parents must be at least 18 years old.</p>
            </div>

            <!-- Extra fields for Teacher/Parent -->
            <div id="extraFields" class="extra-fields" style="display:none;">
                <div class="form-group">
                    <label for="phone">Mobile Number</label>
                    <input type="tel" id="phone" name="phone" placeholder="+47 999 99 999" pattern="[0-9+ ]{8,15}" />
                    <span class="error-message">Please enter a valid mobile number.</span>
                </div>

                <div class="form-group">
                    <label for="birthdate">Date of Birth</label>
                    <input type="date" id="birthdate" name="birthdate" />
                    <span class="error-message">You must be at least 18 years old to register as a Teacher or
                        Parent.</span>
                </div>
            </div>

            <!-- Submit -->
            <button type="submit" class="btn-primary">Sign Up</button>

            <p class="footer-text">
                Already have an account? <a asp-controller="Account" asp-action="Login">Log in!</a>
            </p>
        </form>
    </div>
</section>

<!-- ===================== STYLES ===================== -->
<style>
    .signup-page {
        /* background: #d9f1ff; */
        min-height: 100vh;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        font-family: 'Baloo 2', system-ui, sans-serif;
    }


    /* Container */
    .signup-container {
        position: relative;
        z-index: 1;
        background: #fff;
        border-radius: 2rem;
        padding: 2.5rem 3rem;
        width: 100%;
        max-width: 480px;
        box-shadow: 0 10px 30px rgba(15, 118, 110, 0.25);
        text-align: center;
    }

    .signup-mascot {
        width: 100px;
        height: auto;
        margin-bottom: 0.5rem;
    }

    h1 {
        color: #004b74;
        font-size: 2.2rem;
        margin-bottom: 0.25rem;
    }

    .subtitle {
        color: #0F766E;
        font-weight: 700;
        margin-bottom: 2rem;
    }

    /* Form */
    .signup-form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        text-align: left;
    }

    .form-group label {
        font-weight: 700;
        color: #004b74;
        font-size: 1rem;
    }

    /* Dropdown (same style as TakeQuiz page) */
    .dropdown-wrapper select {
        appearance: none;
        background: #fff;
        border: 3px solid #0F766E;
        border-radius: 999px;
        padding: 12px 20px;
        width: 100%;
        font-size: 1rem;
        color: #1f2937;
        font-weight: 700;
        cursor: pointer;
        background-image: url("data:image/svg+xml;utf8,<svg fill='%23004b74' height='20' viewBox='0 0 20 20' width='20' xmlns='http://www.w3.org/2000/svg'><path d='M5 7l5 5 5-5z'/></svg>");
        background-repeat: no-repeat;
        background-position: right 1rem center;
    }

    .dropdown-wrapper select:focus {
        border-color: #0F766E;
        background-color: #fffaf3;
    }

    .role-hint {
        font-size: 0.9rem;
        color: #6b7280;
        margin-top: 0.3rem;
        font-weight: 600;
    }

    /* Inputs */
    .form-group input {
        width: 100%;
        padding: 0.8rem 1rem;
        border: 3px solid #0f766e;
        border-radius: 999px;
        font-size: 1rem;
        outline: none;
        transition: 0.2s;
    }

    .form-group input:focus {
        border-color: #0F766E;
        background: #fffef7;
    }

    /* Error messages */
    .error-message {
        display: none;
        font-size: 0.9rem;
        color: #d946ef;
        font-weight: 600;
        margin-top: 0.3rem;
    }

    /* Button */
    .btn-primary {
        margin-top: 0.5rem;
        background: #0f766e;
        color: white;
        font-weight: 800;
        font-size: 1.1rem;
        border: none;
        border-radius: 999px;
        padding: 0.9rem 2rem;
        box-shadow: 0 5px 0 #0b5c55;
        cursor: pointer;
        transition: transform 0.15s ease;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        filter: brightness(1.1);
    }

    /* Footer text */
   /* .footer-text {
        margin-top: 1.2rem;
        color: #374151;
        text-align: center;
        font-size: 1rem;
    }

    .footer-text a {
        color: #0F766E;
        text-decoration: none;
        font-weight: 700;
    }

    .footer-text a:hover {
        text-decoration: underline;
    }
</style>

<!-- ===================== SCRIPT ===================== -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("signupForm");
        const fields = form.querySelectorAll("input, select");
        const submitButton = form.querySelector(".btn-primary");
        const roleSelect = document.getElementById("role");
        const extraFields = document.getElementById("extraFields");
        const phone = document.getElementById("phone");
        const birthdate = document.getElementById("birthdate");

        // === Show or hide extra fields based on role ===
        function toggleExtraFields() {
            const role = roleSelect.value;
            if (role === "teacher" || role === "parent") {
                extraFields.style.display = "block";
                phone.setAttribute("required", true);
                birthdate.setAttribute("required", true);
            } else {
                extraFields.style.display = "none";
                phone.removeAttribute("required");
                birthdate.removeAttribute("required");
                phone.value = "";
                birthdate.value = "";
                hideError(phone);
                hideError(birthdate);
            }
            checkFormValidity();
        }

        roleSelect.addEventListener("change", toggleExtraFields);
        toggleExtraFields();

        // === Helper functions for showing/hiding errors ===
        function showError(field, message) {
            const error = field.parentElement.querySelector(".error-message");
            if (error) {
                error.textContent = message;
                error.style.display = "block";
            }
        }

        function hideError(field) {
            const error = field.parentElement.querySelector(".error-message");
            if (error) error.style.display = "none";
        }

        // === Password match validation ===
        function validatePasswords() {
            const pwd = document.getElementById("password");
            const confirm = document.getElementById("confirmPassword");
            if (pwd.value !== confirm.value) {
                confirm.setCustomValidity("Passwords must match.");
                showError(confirm, "Passwords must match.");
            } else {
                confirm.setCustomValidity("");
                hideError(confirm);
            }
        }

        // === Age validation: Teacher/Parent must be 18+ ===
        function validateAge() {
            const role = roleSelect.value;
            if ((role === "teacher" || role === "parent") && birthdate.value) {
                const birth = new Date(birthdate.value);
                const today = new Date();
                const age = today.getFullYear() - birth.getFullYear();
                const m = today.getMonth() - birth.getMonth();
                const adjustedAge = m < 0 || (m === 0 && today.getDate() < birth.getDate()) ? age - 1 : age;

                if (adjustedAge < 18) {
                    birthdate.setCustomValidity("You must be at least 18 years old.");
                    showError(birthdate, "You must be at least 18 years old to register as a Teacher or Parent.");
                } else {
                    birthdate.setCustomValidity("");
                    hideError(birthdate);
                }
            } else {
                birthdate.setCustomValidity("");
                hideError(birthdate);
            }
        }

        // === Generic field validation ===
        function validateField(field) {
            if (!field.checkValidity()) {
                showError(field, field.validationMessage);
            } else {
                hideError(field);
            }
        }

        // === Enable or disable the Sign Up button ===
        function checkFormValidity() {
            const allValid = form.checkValidity();
            submitButton.disabled = !allValid;
            submitButton.style.opacity = allValid ? "1" : "0.6";
            submitButton.style.cursor = allValid ? "pointer" : "not-allowed";
        }

        // === Live validation while typing ===
        fields.forEach(field => {
            field.addEventListener("input", () => {
                validateField(field);
                validatePasswords();
                validateAge();
                checkFormValidity();
            });
            field.addEventListener("change", () => {
                validateField(field);
                validatePasswords();
                validateAge();
                checkFormValidity();
            });
        });

        // === Final validation on submit ===
        form.addEventListener("submit", function (e) {
            validatePasswords();
            validateAge();

            fields.forEach(field => validateField(field));

            if (!form.checkValidity()) {
                e.preventDefault();
                form.reportValidity();
            }
        });

        checkFormValidity();
    });
</script>